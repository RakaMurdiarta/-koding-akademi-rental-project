// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum StatusRequestOwner {
  requested
  accepted
}

// assignment to add table admin to manage request owner
model Owner {
  id         String    @id @default(uuid()) @map("id")
  vehicles   Vehicle[]
  customerId String    @unique @map("customer_id")
  customer   Customer  @relation(fields: [customerId], references: [id])
}

model OwnerRequestHistory {
  id         String             @id @default(uuid()) @map("id")
  customerId String             @unique @map("customer_id")
  customer   Customer           @relation(fields: [customerId], references: [id])
  status     StatusRequestOwner
}

enum CustomerType {
  individu
  company
}

model Vehicle {
  id              String          @id @default(uuid()) @map("id")
  model           String          @map("model")
  year            Int             @map("year")
  identityNumber  String          @map("idnumber")
  ownerId         String          @map("owner_id")
  owner           Owner           @relation(fields: [ownerId], references: [id])
  price           Float
  type            String          @map("type")
  imageUrl        String          @map("imageUrl")
  isAvailable     Boolean         @default(true) @map("is_available")
  rents           Rents[]
  returnHistories ReturnHistory[]
}

model Customer {
  id              String               @id @default(uuid()) @map("id")
  phone           String               @map("phone")
  email           String               @unique @map("email")
  password        String               @map("password")
  customerType    CustomerType?        @default(individu)
  fullname        String               @map("fullname")
  cname           String?              @map("cname")
  owner           Owner?
  rents           Rents[]
  returnHistories ReturnHistory[]
  requestOwner    OwnerRequestHistory?
}

model Rents {
  id         String    @id @default(uuid()) @map("id")
  customerId String    @map("customer_id")
  vehicleId  String    @map("vehicle_id")
  startDate  DateTime? @map("start_date")
  returnDate DateTime? @map("return_date")
  amountDue  Float     @map("amount_due")
  noOfDays   Int       @map("no_of_days")
  active     Boolean   @default(true) @map("active")
  customer   Customer  @relation(fields: [customerId], references: [id])
  vehicle    Vehicle   @relation(fields: [vehicleId], references: [id])
}

model Admin {
  id       String @id @default(uuid()) @map("id")
  username String @map("usernmae")
  password String @map("password")
}

model ReturnHistory {
  id         String   @id @default(uuid()) @map("id")
  customerId String   @map("customer_id")
  vehicleId  String   @map("vehicle_id")
  returnDate DateTime @map("return_date")
  isLate     Boolean  @default(false) @map("is_late")
  customer   Customer @relation(fields: [customerId], references: [id])
  vehicle    Vehicle  @relation(fields: [vehicleId], references: [id])
}
